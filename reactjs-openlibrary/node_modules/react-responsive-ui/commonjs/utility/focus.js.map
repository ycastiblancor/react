{"version":3,"sources":["../../source/utility/focus.js"],"names":["onBlur","focus","event","onFocusOut","getComponentNode","getComponentNode2","preventBlur","_onBlur","focusedNode","Element","HTMLDocument","contains","setTimeout","document","activeElement","relatedTarget","undefined","component"],"mappings":";;;;;QAEgBA,M,GAAAA,M;QAqDAC,K,GAAAA,K;;AAvDhB;;AAEO,SAASD,MAAT,CAAgBE,KAAhB,EAAuBC,UAAvB,EAAmCC,gBAAnC,EAAqDC,iBAArD,EAAwEC,WAAxE,EACP;AACC,UAASC,OAAT,CAAiBC,WAAjB,EACA;AACC,MAAIF,WAAJ,EAAiB;AAChB,OAAIA,kBAAkB,IAAtB,EAA4B;AAC3B,WAAO,KAAP;AACA;AACD;;AAED;AACA;AACA,MACCE,gBACCA,uBAAuBC,OAAvB,IAAkCD,uBAAuBE,YAD1D,MAGCN,mBAAmBO,QAAnB,CAA4BH,WAA5B,KACCH,qBAAqBA,oBAAoBM,QAApB,CAA6BH,WAA7B,CAJvB,CADD,EAOE;AACD,UAAO,KAAP;AACA;;AAED;AACA;AACAL,aAAWD,KAAX;AACA,SAAO,IAAP;AACA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI,8BAAJ,EAA0B;AACzB,SAAOU,WAAW;AAAA,UAAMR,sBAAsBG,QAAQM,SAASC,aAAjB,CAA5B;AAAA,GAAX,EAAwE,EAAxE,CAAP;AACA;;AAED;AACA;AACA;AACA,QAAOP,QAAQ,oBAAUL,MAAMa,aAAhB,IAAiCb,MAAMa,aAAvC,GAAuDC,SAA/D,CAAP;AACA;;AAED;;;;AAIO,SAASf,KAAT,CAAegB,SAAf,EACP;AACC;AACA;AACA,KAAI,CAACA,SAAL,EAAgB;AACf;AACA;;AAED,KAAI,OAAOA,UAAUhB,KAAjB,KAA2B,UAA/B,EAA2C;AAC1CgB,YAAUhB,KAAV;AACA,SAAO,IAAP;AACA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"focus.js","sourcesContent":["import { isInternetExplorer, isElement } from './dom'\r\n\r\nexport function onBlur(event, onFocusOut, getComponentNode, getComponentNode2, preventBlur)\r\n{\r\n\tfunction _onBlur(focusedNode)\r\n\t{\r\n\t\tif (preventBlur) {\r\n\t\t\tif (preventBlur() === true) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If the currently focused element is inside the expandable\r\n\t\t// then don't collapse it.\r\n\t\tif (\r\n\t\t\tfocusedNode &&\r\n\t\t\t(focusedNode instanceof Element || focusedNode instanceof HTMLDocument) &&\r\n\t\t\t(\r\n\t\t\t\tgetComponentNode().contains(focusedNode) ||\r\n\t\t\t\t(getComponentNode2 && getComponentNode2().contains(focusedNode))\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\t// Collapse the expandable.\r\n\t\t// (clicked/tapped outside or tabbed-out)\r\n\t\tonFocusOut(event)\r\n\t\treturn true\r\n\t}\r\n\r\n\t// Blur `event.relatedTarget` doesn't work in Internet Explorer (in React).\r\n\t// https://github.com/gpbl/react-day-picker/issues/668\r\n\t// https://github.com/facebook/react/issues/3751\r\n\t//\r\n\t// Therefore, using a 30ms timeout hack in `onBlur` handler\r\n\t// to get the new currently focused page element\r\n\t// and check if that element is inside the component.\r\n\t// https://github.com/mui-org/material-ui/blob/v1-beta/packages/material-ui/src/Menu/MenuList.js\r\n\t// Until Internet Explorer is no longer a supported browser.\r\n\t//\r\n\tif (isInternetExplorer()) {\r\n\t\treturn setTimeout(() => getComponentNode() && _onBlur(document.activeElement), 30)\r\n\t}\r\n\r\n\t// There was an error in Firefox 52:\r\n\t// \"Argument 1 of Node.contains does not implement interface Node\".\r\n\t// To prevent such errors `event.relatedTarget` is validated manually here.\r\n\treturn _onBlur(isElement(event.relatedTarget) ? event.relatedTarget : undefined)\r\n}\r\n\r\n/**\r\n * Focuses on a React component (if any).\r\n * @param  {?object} component\r\n */\r\nexport function focus(component)\r\n{\r\n\t// If the component has been already unmounted.\r\n\t// (safety)\r\n\tif (!component) {\r\n\t\treturn\r\n\t}\r\n\r\n\tif (typeof component.focus === 'function') {\r\n\t\tcomponent.focus()\r\n\t\treturn true\r\n\t}\r\n\r\n\t// `findDOMNode()` is deprecated in React.\r\n\t// https://reactjs.org/docs/strict-mode.html#warning-about-deprecated-finddomnode-usage\r\n\t// // For cases when `<List.Item/>` wraps some custom\r\n\t// // `<Button/>` component which renders a generic `<button/>`.\r\n\t// const node = ReactDOM.findDOMNode(component)\r\n\t// if (node && node.focus) {\r\n\t// \tnode.focus()\r\n\t// \treturn true\r\n\t// }\r\n}"]}